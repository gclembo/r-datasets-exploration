---
title: "MPG Data"
date: "`r Sys.Date()`"
author: Carter Lembo
format: 
  html:
    toc: true
---

## Intro
I want to use the mpg dataset to create a model to predict city fuel efficiency of cars based on other attributes.

## Setup

I am using the tidyverse for data manipulation and visualization.

```{r}
#| label: setup
#| output: false

library(tidyverse)

```

## Exploration

The dataset mpg or Fuel economy data from 1999 to 2008 for 38 popular models of cars contains many variables on various types of cars.

```{r}
#| label: exploration

mpg |> 
  names()

mpg |> 
  head() |> 
  knitr::kable()

```


## First Attempt 

For the features to include in the model I chose to use the engine displacement, the year of manufacture, the number of cylinders, the type of drive train, and the class.

### Modeling

```{r}
#| label: model-1
features <- c("displ", "cyl", "year", "drv", "fl", "class")

data <- mpg |> 
  select(cty, all_of(features))

model <- lm(cty ~ ., data = data)

```

This model has a multiple R-squared of `r summary(model)$r.squared`


### Residuals

Finally we want to look at the residuals and make sure there are not strange patterns which could indicate the model is not appropriate. 

```{r}
#| label: fig-residuals
#| fig-cap: Model Residuals

broom::augment(model) |>
  ggplot(aes(x = .fitted, y = .resid)) +
  geom_abline(slope = 0, intercept = 0, color = "blue") +
  geom_point() +
  labs(x = "Predicted", y = "Residual")


```

The residuals to the right seem to be more scattered than on the left. To help with this I will transform the target variable using a Box Cox transformation when training the model. 

## Second Attempt

This time I will fit the model based on a transformed target using the Box-Cox transform. 

### Modeling 

```{r}
#| label: model-2

lambda <- forecast::BoxCox.lambda(data$cty)

model2 <- lm(forecast::BoxCox(cty, lambda) ~ ., data = data)

```

This model gives us an R-squared of `r summary(model2)$r.squared`

### Residuals

Looking at the residuals for this model, there is much less of a pattern left over.

```{r}
#| label: fig-residuals-2
#| fig-cap: Residuals of Second Model

broom::augment(model2) |>
  ggplot(aes(x = .fitted, y = .resid)) +
  geom_abline(slope = 0, intercept = 0, color = "blue") +
  geom_point() +
  labs(x = "Predicted", y = "Residual")


```

## Final Notes 

The second transformed model appears to perform better than the first. Keep in mind the results of the second model have to be reverse transformed using `forecast::InvBoxCox()` with the lambda value `r lambda`. 


